plugins {
    id 'java'
    id 'org.springframework.boot' version '1.5.2.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.3'
    id 'au.com.dius.pact' version '3.3.7'
}

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.hsqldb:hsqldb')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}

pact {
    serviceProviders {
        // You can define as many as you need, but each must have a unique name
        restaurant_api {
            // All the provider properties are optional, and have sensible defaults (shown below)
//            protocol = 'http'
//            host = 'localhost'
//            port = 8080
//            path = '/'
            // Or if you have many pact files in a directory
            hasPactsWith('manyConsumers') {
                // Will define a consumer for each pact file in the directory.
                // Consumer name is read from contents of pact file
                pactFileLocation = file('pacts')
            }
        }
    }
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    outputDir 'build/asciidoc'
    dependsOn test
}

jar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static'
    }
    baseName = 'wj'
    version = '0.0.1-SNAPSHOT'
}